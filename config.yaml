# list of scenes to download and process
scenes: [
        #S1B_IW_SLC__1SSH_20190223T222639_20190223T222706_015079_01C2E9_1D63,
        #S1A_IW_SLC__1SSH_20190605T222724_20190605T222751_027550_031BE1_AD3A,
        S1A_IW_SLC__1SSH_20190926T124734_20190926T124804_029192_0350B9_FA6B,
        #S1B_IW_SLC__1SSH_20190315T195015_20190315T195045_015369_01CC73_DB8B,
        #S1B_IW_SLC__1SSH_20210223T233056_20210223T233124_025740_031194_E7BE,
        #S1B_IW_SLC__1SSH_20210228T035005_20210228T035033_025801_03138F_8CB2,
        #S1A_IW_SLC__1SSH_20230127T142750_20230127T142817_046970_05A22F_17F7,
        ]

# the template for the OPERA-RTC backscatter products
# variables are set in this file for each scene
OPERA_rtc_remplate: OPERA-rtc-template.yaml

# we will mount this folder in the docker container so all data can be accessed
# this folder should contain all the downloaded scenes, dems, etc specified below
data_folder: '/data'

# folder to save all the configs we generate for each run
OPERA_config_folder: /data/OPERA/config

# scratch path for intermedian prodicts
OPERA_scratch_folder: /data/OPERA/scratch

#save directory for final opera products
OPERA_output_folder: /data/OPERA/outdir

# location of earthdata credentials to download data.
# file should be in format shown in credentials_example.txt
earthdata_credentials: /home/ec2-user/s1_data_download/credentials/credentials_earthdata.txt

# directory to save scenes
scene_folder: /data/scenes

# whether to unzip the safe file
unzip_scene: True

# directory where precise orbits are saved
precise_orbit_folder: /data/osv/POEORB

# directory restituted orbits are saved
restituted_orbit_folder: /data/osv/RESORB

# directory where DEM will be saved - a sub folder is made for each DEM type
dem_folder: /data/dem

# type of dem to download for each scene
# list of valid dems in https://pypi.org/project/dem-stitcher/
dem_type: glo_30

# s3 bucket to push the results
# formatting will be {s3_bucket}/{opera-rtc}/{scene}/{product_id}
s3_bucket: deant-data-public-dev

# whether to push to s3
push_to_s3: True

# whether to push the DEM to the S3 bucket
upload_dem: True

# delete files after run
delete_local_files: False